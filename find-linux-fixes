#!/bin/bash -eu
#
# Search the linux 'Fixes:' file for commits that fix the given commit(s).
#

LINUX_FIXES=/srv/git/linux.fixes
LINUX_REPO=/srv/git/linux.git

function find_fixes()
{
	local commit=${1} indent=${2}
	local fixes fix

	readarray -t fixes < <(grep -P "__FIXES__\s+${commit::12}" "${LINUX_FIXES}")

	for fix in "${fixes[@]}" ; do
		printf "%0.s " $(seq "${indent}")
		echo "${fix%% __FIXES__*}"
		find_fixes "${fix%% *}" "$((indent + 2))"
	done
}

function usage()
{
	cat <<EOF
Usage: find-linux-fixes [-d] COMMIT [COMMIT ...]

Find 'Fixes:' commits in the main Linux repo for the specified COMMIT.

Optional arguments:
  -h, --help  Show this help text.
EOF
}

commits=()

while [ $# -gt 0 ] ; do
    case "${1}" in
        -h|--help)
            usage
            exit
            ;;
        -*)
            echo "Unexpected argument: ${1}" 1>&2
            exit 1
            ;;
        *)
			commits=("${@}")
			break
            ;;
    esac
    shift
done

for commit in "${commits[@]}" ; do
	first=$(git --git-dir="${LINUX_REPO}" log --format='%h ("%s")' \
				"${commit}" -1 || true)
	if [ -z "${first}" ] ; then
		echo "Error: ${commit} is not a commit in Linus' repo"
	else
		echo "${first}"
		find_fixes "${commit}" 2
	fi
done
