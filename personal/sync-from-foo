#!/bin/bash

HOST=${0#*/sync-from-}

USER_FILES=(
	${HOME}/.bash_aliases
	${HOME}/.bashrc
	${HOME}/.caffrc
	${HOME}/.canonistack/
	${HOME}/.claws-mail/
	${HOME}/.config/gtk-3.0/gtk.css
	${HOME}/.config/hexchat/servlist.conf
	${HOME}/.cranky
	${HOME}/.emacs
	${HOME}/.emacs.d/
	${HOME}/.emacs.el/
	${HOME}/.gnupg/
	${HOME}/.gitconfig
	${HOME}/.imapfilter/
	${HOME}/.password-store/
	${HOME}/.sesame/
	${HOME}/.ssh/
	${HOME}/Mail/
)

ROOT_FILES=(
	/etc/NetworkManager/conf.d/localdns.conf
	/etc/NetworkManager/dnsmasq.d/libvirt.conf
	/etc/auto.jabba
	/etc/auto.fritz
	# /etc/auto.master
	/etc/security/limits.d/custom.conf
	/etc/sudoers.d/${USER}
)

function usage()
{
	cat <<EOF
Usage: sync-from-foo [-h] [-r] [-u]

Optional arguments:
  -h, --help  Show this help text.
  -r, --root  Sync root files.
  -u, --user  Sync user files.
EOF
}

USER=0
ROOT=0
while [ $# -gt 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		-u|--user)
			USER=1
			;;
		-r|--root)
			ROOT=1
			;;
		*)
			echo "Invalid argument: ${1}"
			exit 2
			;;
	esac
	shift
done

if [ ${USER} -eq 0 ] && [ ${ROOT} -eq 0 ] ; then
	usage
	exit 1
fi

if [ ${USER} -eq 1 ] ; then
	echo "Syncing user files..."
	# shellcheck disable=SC2029
	ssh "${HOST}" "tar cpf - ${USER_FILES[*]}" | ( cd / && tar xpvf - )

	# Fix host specific files
	sed -i -e "s,@${HOST}/,@$(hostname)/," ${HOME}/.config/hexchat/servlist.conf
fi

if [ ${ROOT} -eq 1 ] ; then
	echo "Syncing root files..."
	# shellcheck disable=SC2029
	ssh "${HOST}" "sudo tar cpf - ${ROOT_FILES[*]}" | ( cd / && sudo tar xpvf - )
fi
