#!/bin/bash -eu

function do_colordiff()
{
	local line

	while IFS= read -r line ; do
		if [ "${line#-}" != "${line}" ] ; then
			echo -e "\e[31m${line}\e[0m"
		elif [ "${line#+}" != "${line}" ] ; then
			echo -e "\e[32m${line}\e[0m"
		elif [ "${line#!}" != "${line}" ] ; then
			echo -e "\e[33m${line}\e[0m"
		elif [ "${line#@@}" != "${line}" ] ; then
			echo -e "\e[36m${line}\e[0m"
		elif [ "${line#diff --git }" != "${line}" ] ; then
			echo -e "\e[1m\e[36m${line}\e[0m"
		else
			echo "${line}"
		fi
	done
}

function out()
{
	local rc=${?}

	trap - EXIT

	if [ -d "${TMPD}" ] ; then
		rm -rf "${TMPD}"
	fi

	if [ "${rc}" -ne 0 ] ; then
		echo "Script failed" >&2
	fi

	exit "${rc}"
}

function review_src()
{
	local src_dir=$1
	local cwd DEBIAN src version debdiff changes

	cwd=${PWD}

	cd "${src_dir}" || exit 1

	DEBIAN=debian
	# shellcheck disable=SC1091
	if [ -e debian/debian.env ] ; then
		. debian/debian.env
	fi

	src=$(dpkg-parsechangelog -l "${DEBIAN}"/changelog -S Source)
	version=$(dpkg-parsechangelog -l "${DEBIAN}"/changelog -S Version)
	debdiff=${src}_${version}.debdiff
	changes=${src}_${version}_source.changes

	if ! [ -f ../"${changes}" ] ; then
		echo "No .changes file found: ${changes}" >&2
		return
	fi

	if [ "${FORCE}" -eq 1 ] ; then
		rm -f ../"${debdiff}"
	fi

	# Create the debdiff if it doesn't exist
	if ! [ -e ../"${debdiff}" ] ; then
		if [ -z "${TMPD}" ] ; then
			TMPD=$(mktemp -d)
			# Cache the previous versions
			while read -r prev_src prev_version rest ; do
				PREVIOUS[${prev_src}]=${prev_version}
			done < <(cranky rmadison -s -p "${POCKET}")
		fi

		prev_dsc="${src}"_"${PREVIOUS[${src}]}".dsc
		if ! [ -e ../"${prev_dsc}" ] ; then
			echo "No previous .dsc found: ${prev_dsc}" >&2
			return
		fi

		( cd "${TMPD}" && dcmd "${cwd}"/../"${prev_dsc}" | \
			while read -r f ; do ln -sf "${f}" . ; done )
		( cd ../ && cranky review -p "${TMPD}" "${changes}" )
	fi

	# Bail out if the debdiff doesn't exists
	if ! [ -e ../"${debdiff}" ] ; then
		echo "No .debdiff file found: ${debdiff}" >&2
		return
	fi

	# lsdiff .debdiff
	echo
	echo -e "\e[96m*** ${src} [1/3]: lsdiff ${debdiff} ***\e[0m"
	echo
	lsdiff -s ../"${debdiff}" | do_colordiff

	# filterdiff .debdiff
	echo
	echo -e "\e[96m*** ${src} [2/3]: filterdiff ${debdiff} ***\e[0m"
	echo
	filterdiff -x '*/abi/*' "../${debdiff}" | do_colordiff

	# Content of .changes
	echo
	echo -e "\e[96m*** ${src} [3/3]: cat ${changes} ***\e[0m"
	echo
	cat ../"${changes}"

	cd "${cwd}"
}

function usage()
{
	cat <<EOF
Usage: cranky review-sources [-f] [-h] POCKET

Review the differences between the current kernel source packages and the
previous source packages from pocket <POCKET>.

Positional arguments:
  POCKET       The name of the pocket that contains the previous kernel
               packages to compare against.

Optional arguments:
  -f, --force  Force the recreation of the .debdiff files.
  -h, --help   Show this help message and exit.
EOF
}

FORCE=0
POCKET=

while [ ${#} -gt 0 ] ; do
	case "${1}" in
		-f|--force)
			FORCE=1
			;;
		-h|--help)
			usage
			exit
			;;
		-*)
			echo "Invalid argument: ${1}" >&2
			exit 2
			;;
		*)
			if [ -z "${POCKET}" ] ; then
				POCKET=${1}
			else
				echo "Invalid argument: ${1}" >&2
				exit 2
			fi
			;;
	esac
	shift
done

if [ -z "${POCKET}" ] ; then
	usage
	exit 2
fi

TMPD=
trap out EXIT

readarray -t srcs < <(cranky shell-helper source-packages-path)
if [ "${#srcs[@]}" -eq 0 ] ; then
	exit 1
fi

declare -A PREVIOUS
for src in "${srcs[@]}" ; do
	review_src "${src}"
done
