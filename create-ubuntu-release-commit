#!/bin/bash -eu
#
# Create a release commit for an Ubuntu debian package and tag it
#

function out()
{
	local rc=${?}

	if [ -n "${TMP}" ] ; then
		rm -f "${TMP}"
	fi

	if [ "${rc}" -ne 0 ] ; then
		echo "Script failed" >&2
	fi
}

function usage()
{
	cat <<EOF
Usage: create-ubuntu-release-commit [-d] [-h]

Create a release commit for an Ubuntu debian package and tag it.

Optional arguments:
  -d, --dry-run  Show the new changelog entry without committing it.
  -h, --help     Show this help text and exit.
EOF
}

dry_run=0

while [ "${#}" -gt 0 ] ; do
	case "${1}" in
		-d|--dry-run)
			dry_run=1
			;;
		-h|--help)
			usage
			exit
			;;
		*)
			echo "Invalid argument: ${1}" >&2
			exit 2
			;;
	esac
	shift
done

TMP=
trap out EXIT INT TERM HUP

version=$(dpkg-parsechangelog -S Version)
prev_release=$(git log --oneline -1000 | \
				   grep -m1 -P "^[0-9a-f]{12,} UBUNTU: Ubuntu-${version}$")
if [ -z "${prev_release}" ] ; then
	echo "Unable to find previous release commit" >&2
	exit 1
fi

upload=$(echo "${version}" | grep -oP '[0-9]+$')
new_version=${version%${upload}}$((upload + 1))

src=$(dpkg-parsechangelog -S Source)
dist=$(dpkg-parsechangelog -S Distribution)
urgency=$(dpkg-parsechangelog -S Urgency)

TMP=$(mktemp)
{
	echo "${src} (${new_version}) ${dist}; urgency=${urgency}"
	echo
	git log "${prev_release%% *}".. | git-ubuntu-log
	echo
	echo " -- ${DEBFULLNAME} <${DEBEMAIL}>  $(date -R)"
	if [ "${dry_run}" -eq 0 ] ; then
		echo
		cat debian/changelog
	fi
} > "${TMP}"

if [ "${dry_run}" -eq 1 ] ; then
	cat "${TMP}"
	exit
fi

mv "${TMP}" debian/changelog
TMP=

# Check if the tag exists already
tag="Ubuntu-${new_version}"
if git rev-parse "${tag}" >/dev/null 2>&1 ; then
	echo "Tag exists already: ${tag}" >&2
	exit 1
fi

git commit -s -m "UBUNTU: ${tag}" -- debian/changelog
git tag -s -m "${tag}" "${tag}"
