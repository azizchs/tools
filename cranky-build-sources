#!/bin/bash -eu

function out()
{
	local rc=${?}

	trap - EXIT

	if [ "${rc}" -ne 0 ] ; then
		echo "Script failed" >&2
	fi

	exit "${rc}"
}

function usage()
{
	cat <<EOF
Usage: cranky-build-sources [-h] POCKET

Build a set of kernel packages.

Positional arguments:
  POCKET      The pocket to get the versions of the previous kernel packages
              from. If set to 'none', uses the version from the previous
              changelog entries.

Optional arguments:
  -h, --help  Show this help text and exit.
  -o, --orig  Include the orig source tarball in the upload.
EOF
}

pocket=
orig=0

while [ "${#}" -gt 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		-o|--orig)
			orig=1
			;;
		updates|release|security|proposed|none)
			if [ -z "${pocket}" ] ; then
				pocket=${1}
			else
				echo "Invalid argument: ${1}" >&2
				exit 2
			fi
			;;
		*)
			echo "Invalid argument: ${1}" >&2
			exit 2
			;;
	esac
	shift
done

if [ -z "${pocket}" ] ; then
	usage
	exit 2
fi

if [ -n "$(git status --porcelain)" ] ; then
	echo "Repo is unclean" >&2
	exit 1
fi

trap out EXIT

# Get the previous package versions
if [ "${pocket}" = "none" ] ; then
	# From the package changelogs
	cwd=${PWD}
	previous=()
	while IFS= read -r src_dir ; do
		cd "${src_dir}"
		DEBIAN=debian
		if [ -e debian/debian.env ] ; then
			# shellcheck disable=SC1091
			. debian/debian.env
		fi
		src=$(dpkg-parsechangelog -l "${DEBIAN}"/changelog -S Source)
		prev_version=$(dpkg-parsechangelog -l "${DEBIAN}"/changelog \
										   -S Version -o 1 -c 1)
		previous+=("${src} ${prev_version}")
	done < <(cranky shell-helper source-packages-path)
	cd "${cwd}"
else
	# From the provided pocket
	readarray -t previous < <(cranky rmadison -s -p "${pocket}")
fi

build_opts=()
# shellcheck disable=SC2034
for prev in "${previous[@]}" ; do
	package=${prev%% }
	version=${prev#* }
	version=${version%% *}

	case "${package}" in
		linux-meta*)
			build_opts+=("--build-opts" "meta:-v${version}")
			;;
		linux-signed*)
			build_opts+=("--build-opts" "signed:-v${version}")
			;;
		linux*)
			build_opts+=("--build-opts" "main:-v${version}")
			;;
		*)
			echo "Unsupported package: ${package}" >&2
			exit 1
	esac
done

if [ "${orig}" -eq 1 ] ; then
	# Include the orig source tarball in the upload
	build_opts+=("--build-opts" "main:-sa")
fi

echo "cranky build-sources ${build_opts[*]}"
cranky build-sources "${build_opts[@]}"
