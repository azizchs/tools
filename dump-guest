#!/bin/bash -eu
#
# Dump the memory of a libivrt or QEMU guest
#

function usage()
{
	cat <<EOF
Usage: dump-guest -d DOMAIN | -s SOCKET [-h] [DUMP_FILE]

Dump the memory of a libvirt/QEMU guest for analysis with crash.

Opional arguments:
  -d, --domain DOMAIN  Dump libvirt guest domamin DOMAIN.
  -h, --help           Show this help text and exit.
  -s, --socket SOCKET  Dump QEMU guest with QEMU monitor socket SOCKET.
EOF
}

dump_file=
domain=
socket=

while [ $# -ne 0 ] ; do
	case "${1}" in
		-d|--domain)
			shift
			domain=${1}
			;;
		-h|--help)
			usage
			exit
			;;
		-s|--socket)
			shift
			socket=${1}
			;;
		*)
			if [ -n "${dump_file}" ] ; then
				echo "Invalid argument: ${1}"
				exit 2
			fi
			dump_file=${1}
			;;
	esac
	shift
done

if [ -z "${domain}" ] && [ -z "${socket}" ] ; then
	usage
	exit 2
fi

dump_file=${dump_file:-dump.$(date +'%Y%m%d%H%M')}

tmpf=$(mktemp -u --tmpdir dump-guest.XXXXXX)
# shellcheck disable=SC2064
trap "sudo rm -f ${tmpf}" EXIT INT TERM HUP

if [ -n "${domain}" ] ; then
	#	virsh qemu-monitor-command "${domain}" --hmp \
	#		  --cmd dump-guest-memory -z "${tmpf}"
	virsh dump "${domain}" "${tmpf}" --memory-only --format=kdump-zlib
elif [ -n "${socket}" ] ; then
	echo "dump-guest-memory -z ${tmpf}" | socat - UNIX-CONNECT:"${socket}"
fi

if ! [ -f "${tmpf}" ] ; then
	echo "Failed to dump guest"
	exit 1
fi

# Just in case
sudo chown "$(id -un):$(id -gn)" "${tmpf}"
chmod 644 "${tmpf}"

# Move the dumpfile
mv "${tmpf}" "${dump_file}"

echo "Created dumpfile ${dump_file}"
