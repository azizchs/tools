#!/bin/bash -eu

function out()
{
	local rc=$?

	trap - EXIT INT TERM HUP

	if [ -n "${CONFIG}" ] ; then
		rm -f "${CONFIG}"
	fi

	if [ "${rc}" -ne 0 ] ; then
		echo "Script failed" >&2
	fi

	exit "${rc}"
}

function canonical_filter_mail()
{
	local lastrun=$1

	touch "${lastrun}"

	cat <<__EOF__
-- Move '[ACTIVITY]' mails
messages = account['Mailing List/Canonical/canonical-kernel-team']:contain_subject('[ACTIVITY]') *
           account['Mailing List/Canonical/core-canonical-kernel-team']:contain_subject('[ACTIVITY]')
move_messages(messages, account['Canonical/Activity'])

-- Move 'The Daily Bug Report for ...' mails
messages = account['Mailing List/Ubuntu/kernel-team']:contain_subject('The Daily Bug Report for')
move_messages(messages, account['Canonical/Bugs'])

-- Move '-proposed tracker' mails
messages = account['Inbox']:contain_subject('-proposed tracker')
move_messages(messages, account['Canonical/SRU'])

-- Move Salesforce mails
messages = account['Mailing List/Canonical/canonical-kernel-team']:contain_subject('SFDC')
move_messages(messages, account['Canonical/SalesForce'])
__EOF__

	# Archive mails only once a day
	today=$(date +'%Y-%m-%d')
	lastrunday=$(awk '{print $1}' "${lastrun}")
	if [ "${today}" != "${lastrunday}" ] ; then
		cat <<__EOF__
-- Archive mails older than 60 days
archive_messages(account, 60)
__EOF__
	fi
}

function usage()
{
	cat <<EOF
Usage: gmail-filter-mail [-d] [-h] [-q] USERNAME

Filter gmail mails using imapfilter.

Positional arguments:
  USERNAME       The gmail username

Optional arguments:
  -d, --dry-run  Dump the imapfilter config file but do not run it.
  -h, --help     Show this help text and exit.
  -q, --quiet    Run imapfilter in non-verbose mode.
EOF
}

username=
dry_run=0
quiet=0

while [ $# -gt 0 ] ; do
	case "${1}" in
		-d|--dry-run)
			dry_run=1
			;;
		-h|--help)
			usage
			exit
			;;
		-q|--quiet)
			quiet=1
			;;
		-*)
			echo "Invalid argument: ${1}" >&2
			exit 2
			;;
		*)
			if [ -n "${username}" ] ; then
				usage
				exit 2
			fi
			username=${1}
			;;
	esac
	shift
done

if [ -z "${username}" ] ; then
	usage
	exit 2
fi

CONFIG=
trap out EXIT INT TERM HUP

cwd=$(dirname "$(readlink -e "${0}")")
CONFIG=$(mktemp)

# Pull in the library
cat "${cwd}/config/imapfilter/lib.lua" > "${CONFIG}"

cat <<EOF >>"${CONFIG}"

options.timeout = 120
options.subscribe = true
options.create = true
-- options.namespace = false
options.info = false

account = IMAP {
   server = 'imap.gmail.com',
   username = '${username}',
   password = show_pass('google.com/${username}'),
   ssl = 'tls1.2',
}
EOF

if [ "${username%@canonical.com}" != "${username}" ] ; then
	lastrun=~/.imapfilter/lastrun.canonical
	canonical_filter_mail "${lastrun}" >> "${CONFIG}"
fi

if [ "${dry_run}" -eq 1 ] ; then
	cat "${CONFIG}"
	exit
fi

opts=()
if [ "${quiet}" -eq 0 ] ; then
	opts+=("-v")
fi

imapfilter "${opts[@]}" -c "${CONFIG}"
date --rfc-3339=seconds > "${lastrun}"
